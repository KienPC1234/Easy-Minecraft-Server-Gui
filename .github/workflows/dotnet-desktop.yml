name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: Easy Minecraft Server Gui.sln
      Test_Project_Path: Easy Minecraft Server Gui\Easy Minecraft Server Gui.csproj
      Output_Directory: ./output
      DOTNET_ROOT: C:\Program Files\dotnet

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore $env:Solution_Name

    # Build the solution and specify the output path
    - name: Build Solution
      run: msbuild "$env:Solution_Name" /p:Configuration=${{ matrix.configuration }} /p:OutputPath=./output

    # Copy additional files from src to output
    - name: Copy Additional Files
      run: |
        mkdir -p ./output
        cp ./src/connect.bat ./output/
        cp ./src/help1.png ./output/
        cp ./src/help2.png ./output/
        cp ./src/help3.png ./output/
        cp ./src/serverOpen.bat ./output/

    # Upload the build artifacts
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Build Artifacts
        path: ./output/*
