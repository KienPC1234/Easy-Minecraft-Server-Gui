<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A75VKZMY5ZspAAAAAElFTkSuQmCC
</value>
  </data>
</root>